@inherits UmbracoViewPage<QuizViewModel>
@using Quiz.Site.Models
@using Quiz.Site.Services
@using Umbraco.Cms.Core.Security
@using Quiz.Site.Extensions;
@using Umbraco.Cms.Core.Services
@inject IAccountService accountService;
@inject IMemberManager memberManager;
@inject IQuizResultRepository quizResultRepository;
@inject IMemberService _memberService;

@if (Model == null || Model.Questions == null || !Model.Questions.Any()) return;

@{
	var success = TempData["Success"];
	var justCompletedIt = success != null && !string.IsNullOrWhiteSpace(success.ToString()); 
	var umbracoPage = Umbraco.AssignedContentItem;
	var quizUdi = Umbraco.AssignedContentItem.GetUdiObject().ToString();
	var member = await memberManager.GetCurrentMemberAsync();
	var memberItem = _memberService.GetByEmail(member.Email);
	var memberModel = accountService.GetMemberModelFromMember(memberItem);
	var quizResult = quizResultRepository.GetByMemberIdAndQuizId(memberModel.Id, quizUdi);
}

@if(quizResult != null)
{
	<div class="form-group min-vh-90 py-5 mt-5 text-center" id="result">
		@if(justCompletedIt)
		{
			<h2>Well Done!</h2>
			<h3>You scored @quizResult.Score out of @quizResult.Total</h3>
			<p>See all of the correct answers</p>
			<a class="btn btn-primary btn-block" href="#quesiton1">Let's go <i class="fas fa-chevron-right mx-1" aria-hidden="true"></i> </a>
		}
		else
		{
			<h2>You already completed this quiz.</h2>
			<h3>You scored @quizResult.Score out of @quizResult.Total</h3>
			<p>See all of the correct answers</p>
			<a class="btn btn-primary btn-block" href="#quesiton1">Let's go <i class="fas fa-chevron-right mx-1" aria-hidden="true"></i> </a>
			
		}
	</div>
}


@using (Html.BeginUmbracoForm("Submit", "QuizSurface", FormMethod.Post, new { @class = "text-left" }))
{
	var questionCount = Model.Questions.Count;
	@for(var q = 0; q < questionCount; q++)
	{
		var answered = Model?.Questions[q]?.IsCorrect.HasValue ?? false;
		<div class="form-group min-vh-90 py-5 mt-5" id="quesiton@(q + 1)">
			@if(q == 0)
			{
				if(Model.CompletedPreviously)
				{
					@*<p>You have already completed this quiz. Here are the correct answers with links to more information:</p>*@
				}
				if(!Model.CompletedPreviously && !justCompletedIt)
				{
					<input type="hidden" asp-for="@Model.QuizId" value="@Model.QuizId" />
				}
			}
			<h3 class="mt-5">Question @(q + 1)</h3>
			<p>@Model.Questions[q].QuestionText</p>

			@{
				var answerPositionOrder = new int[] {0, 1, 2, 3};
				answerPositionOrder = answerPositionOrder.OrderBy(x => Guid.NewGuid()).ToArray();
			}
			@foreach(var a in answerPositionOrder)
			{
				<div class="radio">
					<label>
						<input type="radio" disabled="@(answered ? "disabled" : null)" checked="@(Model.Questions[q].Answers[a].Selected ? "checked" : null)" asp-for="@Model.Questions[q].Answer" value="@(Model.Questions[q].Answers[a].Value)" required />
						@if(justCompletedIt || Model.CompletedPreviously)
						{
							<span class="p-2 @(Model.Questions[q].Answers[a].Selected ? "text-bold" : null) @(Model.Questions[q].Answers[a].Selected && Model.Questions[q].IsCorrect.Value ? "text-success" : null) @(!Model.Questions[q].Answers[a].Selected && Model.Questions[q].CorrectAnswerPosition == a ? "text-success" : null) @(justCompletedIt && Model.Questions[q].Answers[a].Selected && !Model.Questions[q].IsCorrect.Value ? "text-danger" : null)">@(Model.Questions[q].Answers[a].Text)</span>
						}
						else
						{
							<span class="p-2">@(Model.Questions[q].Answers[a].Text)</span>
						}
					</label>
					<span asp-validation-for="@Model.Questions[q].Answer" class="text-danger"></span>
				</div>
			}
			@if(justCompletedIt || Model.CompletedPreviously)
			{
				@if(!string.IsNullOrWhiteSpace(Model.Questions[q].MoreInfoLink))
				{
					<p><a class="link-primary" href="@Model.Questions[q].MoreInfoLink" target="_blank">Learn more about this here</a></p>
				}
			}

			@if(q + 1 < questionCount)
			{
				<div class="form-group d-flex justify-content-around mt-3">
					@if(q >= 1)
					{
						<a class="btn btn-primary btn-block btn-lg d-flex" href="#quesiton@(q)"><i class="fas fa-chevron-left mx-1"></i> Previous</a>
					}
					<a class="btn btn-primary btn-block btn-lg mx-1 d-flex" href="#quesiton@(q + 2)">Next <i class="fas fa-chevron-right mx-1"></i> </a>
				</div>
			}
			else
			{
				<div class="form-group d-flex justify-content-around mt-3">
					<a class="btn btn-primary btn-block btn-lg d-flex" href="#quesiton@(q)"><i class="fas fa-chevron-left mx-1"></i> Previous</a>
					@if(!(justCompletedIt || Model.CompletedPreviously))
					{
						<button class="btn btn-success btn-block btn-lg mx-1" type="submit">Submit</button>
					}
				</div>
			}
			@*			@if(justCompletedIt)
			{
				if(Model.Questions[q].IsCorrect.Value)
				{
					<p class="text-success">Correct</p>
				}
				else
				{
					<p class="text-danger">Incorrect</p>
				}
			}*@

		</div>
	}

	@*@if(!justCompletedIt && !Model.CompletedPreviously)
	{*@

	@*}*@
}
