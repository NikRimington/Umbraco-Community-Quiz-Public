@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ForgottenPasswordPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Quiz.Site.Components
@using Quiz.Site.Models.Tokens;
@{
	Layout = "Master.cshtml";
}

<main class="main-content  mt-0">
    <section>
        <div class="page-header min-vh-100">
            <div class="container">
                <div class="row">
                    <div class="col-xl-4 col-lg-5 col-md-7 d-flex flex-column mx-lg-0 mx-auto">
                        <div class="card card-plain py-lg-3">
                            <div class="card-body text-left">
                                @if (User.Identity != null && !User.Identity.IsAuthenticated)
                                {
                                    if(Model.ShowPasswordResetForm)
                                    {
                                        <h4 class="mb-0 font-weight-bolder">Reset Password</h4>
                                        @await Component.InvokeAsync(ResetPasswordViewComponent.Name)
                                    }
                                    else
                                    {
                                        <h4 class="mb-0 font-weight-bolder">Forgotten Password</h4>
                                        if(TempData.TryGetValue("ForgottenPasswordRequested", out var value) 
                                            && value is bool forgottenPasswordRequested 
                                            && forgottenPasswordRequested)
                                        {
                                            <p>Please check your email for a forgotten password link. This link is valid for 60 minutes.</p> 
                                        }
                                        if(ViewData.TryGetValue("TokenValidationErrors", out var obj)
                                             && obj is TokenValidationModel tokenValidationModel 
                                             && tokenValidationModel.Errors.Count > 0)
                                        {
                                            <p class="text-error">The reset token is no longer valid. Please re-submit your email and try again.</p>
                                        }
                                        if(TempData.TryGetValue("PasswordReset", out var passwordHasReset)
                                            && passwordHasReset is bool passwordHasResetBool && passwordHasResetBool)
                                        {
                                            TempData.Remove("PasswordReset");
                                            <p class="text-success">Your password has successfully been reset.</p>
                                        }
                                        @await Component.InvokeAsync("ForgottenPassword")
                                    }
                                }
                                else
                                {
									this.Context.Response.Redirect("/profile", false);
                                }
                            </div>
                        </div>
                    </div>
                    @await Component.InvokeAsync("SideBanner")
                </div>
            </div>
        </div>
    </section>
</main>